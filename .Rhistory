labs(title= "Bottom Five Countries in 2020", x= "Ladder Score", y = "Country")
library(shiny)
ui <- dashboardPage(
dashboardHeader(title="Analysis of Bottom 5 Countries"),
dashboardSidebar(disable =T),
dashboardBody(selectInput("y", "Select Factor Variable", choices =c("ladder_score", "social_support", "healthy_life_expectancy", "freedom_to_make_life_choices", selected= "ladder_score"),
plotOutput("plot", width = "800px", height = "500px")
)))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(reordermin, aes_string(x=country_name, y=input$y))+
geom_col()
})
}
)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title="Analysis of Bottom 5 Countries"),
dashboardSidebar(disable =T),
dashboardBody(selectInput("y", "Select Factor Variable", choices =c("ladder_score", "social_support", "healthy_life_expectancy", "freedom_to_make_life_choices", selected= "ladder_score"),
plotOutput("plot", width = "800px", height = "500px")
)))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(reordermin, aes_string(x=country_name, y=input$y))+
geom_col()
})
}
shinyApp(ui, server)
View(reordermin)
View(reordermin)
bottom_5_2020 <- reordermin %>%
pivot_wider(-c(country_name, ladder_score),
names_from = "Factors",
values_from= "Score")
bottom_5_2020 <- reordermin %>%
pivot_wider(-c(country_name, ladder_score, year),
names_from = "Factors",
values_from= "Score")
bottom_5_2020 <- reordermin %>%
pivot_wider(names_from = "Factors",
values_from= "Score")
bottom5_2021 <-revampbottom5 %>%
pivot_wider(names_from = "Factors",
values_from= "Score")
View(bottom5_2021)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title="Analysis of Bottom 5 Countries"),
dashboardSidebar(disable =T),
dashboardBody(selectInput("y", "Select Factor Variable", choices =c("ladder_score", "social_support", "healthy_life_expectancy", "freedom_to_make_life_choices", selected= "ladder_score"),
plotOutput("plot", width = "800px", height = "500px")
)))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(bottom_5_2020, aes_string(x=country_name, y=input$y))+
geom_col()
})
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title="Analysis of Bottom 5 Countries"),
dashboardSidebar(disable =T),
dashboardBody(selectInput("y", "Select Factor Variable", choices =c("ladder_score", "social_support", "healthy_life_expectancy", "freedom_to_make_life_choices", selected= "ladder_score"),
plotOutput("plot", width = "800px", height = "500px")
)))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(bottom_5_2020, aes_string(x=country_name, y=input$y, fill=country_name))+
geom_col()
})
}
shinyApp(ui, server)
bottom_5_2020 %>%
ggplot(aes(x=country_name, y= "ladder_score", fill= country_name))+
geom_col()
bottom_5_2020 %>%
ggplot(aes(x=country_name, y= "ladder_score", fill= country_name))+
geom_col()+
coord_flip()
bottom_5_2020 %>%
ggplot(aes(x=country_name, y= ladder_score, fill= country_name))+
geom_col()+
coord_flip()
library(shiny)
ui <- dashboardPage(
dashboardHeader(title="Analysis of Bottom 5 Countries"),
dashboardSidebar(disable =T),
dashboardBody(selectInput("y", "Select Factor Variable", choices =c("ladder_score", "social_support", "healthy_life_expectancy", "freedom_to_make_life_choices", selected= "ladder_score"),
plotOutput("plot", width = "800px", height = "500px")
)))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(aes(x=country_name, y= input$y, fill= country_name))+
geom_col()+
coord_flip())
library(shiny)
ui <- dashboardPage(
dashboardHeader(title="Analysis of Bottom 5 Countries"),
dashboardSidebar(disable =T),
dashboardBody(selectInput("y", "Select Factor Variable", choices =c("ladder_score", "social_support", "healthy_life_expectancy", "freedom_to_make_life_choices", selected= "ladder_score"),
plotOutput("plot", width = "800px", height = "500px")
)))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(aes(x=country_name, y= input$y, fill= country_name))+
geom_col()+
coord_flip()
})
}
shinyApp(ui, server)
bottom_5_2020 %>%
ggplot(aes(reorder(country_name, -ladder_score),x=country_name, y= ladder_score, fill= country_name))+
geom_col()+
coord_flip()
bottom_5_2020 %>%
ggplot((x= reorder(country_name,ladder_score), country_name, y= ladder_score fill= country_name))+
bottom_5_2020 %>%
ggplot((x= reorder(country_name,ladder_score) country_name, y= ladder_score fill= country_name))+
bottom_5_2020 %>%
ggplot(aes(x= reorder(country_name,ladder_score),country_name, y= ladder_score fill= country_name))+
bottom_5_2020 %>%
ggplot(aes(x= reorder(country_name,ladder_score),country_name, y= ladder_score, fill= country_name))+
geom_col()+
coord_flip()
leasthappiestcountries <-full_join(bottom_5_2020,bottom5_2021)
View(leasthappiestcountries)
View(reordermin)
leasthappiestcountries <-left_join(bottom_5_2020,bottom5_2021)
View(leasthappiestcountries)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title="2020 World Map"),
dashboardSidebar(disable =T),
dashboardBody(selectInput("x", "Select Factor Variable", choices =c("ladder_score", "social_support", "healthy_life_expectancy", "freedom_to_make_life_choices", "generosity", "perceptions_of_corruption"), selected= "ladder_score"),
plotOutput("plot", width = "800px", height = "500px")
))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(mapdata2020,aes(x=long, y=lat,group=group))+
geom_polygon(aes_string(fill=input$x), color= "black")+
scale_fill_gradient(name= "Range of Factor", low = "yellow", high = "dark blue", na.value = "grey50")+
labs(x= "Longitude", y= "Latitude", title = "Global Happiness by Factors in 2020")+
theme_tufte()
})
}
shinyApp(ui, server)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
#install.packages("maps", repos = "http://cran.us.r-project.org")
#install.packages("leaflet", repos = "http://cran.us.r-project.org")
#install.packages("rgdal", repos = "http://cran.us.r-project.org")
#install.packages("raster")
#install.packages("tmap", repos = "http://cran.us.r-project.org")
#install.packages("mapproj", repos = "http://cran.us.r-project.org")
#install.packages("countrycode")
# Chunk 3
library(tidyverse)
library(naniar)
library(janitor)
library(here)
library(shiny)
library(shinydashboard)
library(ggplot2)
library(maps)
library(leaflet)
library(magrittr)
library(rvest)
library(rgdal)
library(rworldmap)
#library(tmap)
library(sf)
library(mapproj)
library(ggthemes)
# Chunk 4
getwd()
# Chunk 5
happy_2020 <- read_csv("../happiness_data/2020.csv") %>% clean_names()
happy_2021 <- read_csv("../happiness_data/2021.csv") %>% clean_names()
# Chunk 6
names(happy_2020)
# Chunk 7
happy_2020$year <- "2020"
happy_2021$year <- "2021"
# Chunk 8
happy_2020<-happy_2020 %>%
rename(region = "country_name")
# Chunk 9
happy_2021<-happy_2021 %>%
rename(region = "country_name")
# Chunk 10
names(happy_2020)
# Chunk 11
names(happy_2021)
# Chunk 12
mapdata<-map_data("world")
# Chunk 13
mapdata2020 <-map_data("world")
# Chunk 14
mapdata2020<-left_join(mapdata2020,happy_2020, by="region")
# Chunk 15
mapdata2021<-map_data("world")
# Chunk 16
mapdata2021 <-left_join(mapdata2021, happy_2021, by="region")
# Chunk 17
glimpse(mapdata2020)
# Chunk 18
merged_happy <-read.csv("../happiness_data/merged_happy.csv")
# Chunk 19
merged_happy<-merged_happy %>%
rename(region= "country_name")
# Chunk 20
mapdatahappy <-map_data("world")
glimpse(mapdatahappy)
# Chunk 21
mapdatahappy <-left_join(mapdatahappy, merged_happy, by= "region")
# Chunk 22
summary(mapdata2020$ladder_score)
# Chunk 23
mapdata2020 <-mapdata2020 %>%
mutate(range_ladder_score= case_when(ladder_score < 2.567 ~ "very small",
ladder_score >= 2.567 & ladder_score <=5.747 ~ "small",
ladder_score >= 5.747 & ladder_score <7.809 ~"medium",
ladder_score >= 7.809 ~ "large"))
# Chunk 24
summary(mapdata2020$social_support)
# Chunk 25
mapdata2020 %>%
relocate(social_support) %>%
filter(!is.na(social_support))
# Chunk 26
map_socialsupport<-mapdata2020 %>%
ggplot(aes(x = long, y= lat, group=group))+
geom_polygon(aes(fill=social_support), color= "black")
map_socialsupport
# Chunk 27
map_socialsupport +scale_fill_gradient(name = "Range of Factor", low = "yellow", high= "dark blue", na.value ="grey50")
# Chunk 28
map_healthy_life_expectancy <-mapdata2020 %>%
ggplot(aes(x=long,y=lat,group=group))+
geom_polygon(aes(fill=healthy_life_expectancy),color="black")
map_healthy_life_expectancy
# Chunk 29
map_healthy_life_expectancy +scale_fill_gradient(name = "Range of Factor", low = "yellow", high= "dark blue", na.value ="grey50")
# Chunk 30
map2_social_support <-
mapdata2021 %>%
ggplot(aes(x=long, y=lat, group=group))+
geom_polygon(aes(fill=social_support), color= "black")
map2_social_support +
scale_fill_gradient(name= "Range of Factor", low= "yellow", high = "dark blue", na.value = "grey50")
# Chunk 31
map2_healthy_life_expectancy <-mapdata2021 %>%
ggplot(aes(x=long, y=lat,group=group))+
geom_polygon(aes(fill=healthy_life_expectancy), color= "black")
map2_healthy_life_expectancy+
scale_fill_gradient(name= "Range of Factor", low = "yellow", high = "dark blue", na.value = "grey50")
# Chunk 32
mapdatahappy %>%
ggplot(aes(x=long, y=lat,group=group))+
geom_polygon(aes(fill=healthy_life_expectancy), color= "black")+
scale_fill_gradient(name = "range of factor", low = "yellow", high= "dark blue", na.value = "grey50")
# Chunk 33
names(mapdata2020)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title="2020 World Map"),
dashboardSidebar(disable =T),
dashboardBody(selectInput("x", "Select Factor Variable", choices =c("ladder_score", "social_support", "healthy_life_expectancy", "freedom_to_make_life_choices", "generosity", "perceptions_of_corruption"), selected= "ladder_score"),
plotOutput("plot", width = "800px", height = "500px")
))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(mapdata2020,aes(x=long, y=lat,group=group))+
geom_polygon(aes_string(fill=input$x), color= "black")+
scale_fill_gradient(name= "Range of Factor", low = "yellow", high = "dark blue", na.value = "grey50")+
labs(x= "Longitude", y= "Latitude", title = "Global Happiness by Factors in 2020")+
theme_tufte()
})
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title="2020 World Map"),
dashboardSidebar(disable =T),
dashboardBody(selectInput("x", "Select Factor Variable", choices =c("ladder_score", "social_support", "healthy_life_expectancy", "freedom_to_make_life_choices", "generosity", "perceptions_of_corruption"), selected= "ladder_score"),
plotOutput("plot", width = "800px", height = "500px")
))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(mapdata2020,aes(x=long, y=lat,group=group))+
geom_polygon(aes_string(fill=input$x), color= "black")+
scale_fill_gradient(name= "Range of Factor", low = "yellow", high = "dark blue", na.value = "grey50")+
labs(x= "Longitude", y= "Latitude", title = "Global Happiness by Factors in 2020")+
theme_tufte()
})
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title="2020 World Map"),
dashboardSidebar(disable =T),
dashboardBody(selectInput("x", "Select Factor Variable", choices =c("ladder_score", "social_support", "healthy_life_expectancy", "freedom_to_make_life_choices", "generosity", "perceptions_of_corruption"), selected= "ladder_score"),
plotOutput("plot", width = "800px", height = "500px")
))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(mapdata2020,aes(x=long, y=lat,group=group))+
geom_polygon(aes_string(fill=input$x), color= "black")+
scale_fill_gradient(name= "Range of Factor", low = "yellow", high = "dark blue", na.value = "grey50")+
labs(x= "Longitude", y= "Latitude", title = "Global Happiness by Factors in 2020")+
theme_tufte()
})
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title="2020 World Map"),
dashboardSidebar(disable =T),
dashboardBody(selectInput("x", "Select Factor Variable", choices =c("ladder_score", "social_support", "healthy_life_expectancy", "freedom_to_make_life_choices", "generosity", "perceptions_of_corruption"), selected= "ladder_score"),
plotOutput("plot", width = "800px", height = "500px")
))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(mapdata2020,aes(x=long, y=lat,group=group))+
geom_polygon(aes_string(fill=input$x), color= "black")+
scale_fill_gradient(name= "Range of Factor", low = "yellow", high = "dark blue", na.value = "grey50")+
labs(x= "Longitude", y= "Latitude", title = "Global Happiness by Factors in 2020")+
theme_tufte()
})
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title="2020 World Map"),
dashboardSidebar(disable =T),
dashboardBody(selectInput("x", "Select Factor Variable", choices =c("ladder_score", "social_support", "healthy_life_expectancy", "freedom_to_make_life_choices", "generosity", "perceptions_of_corruption"), selected= "ladder_score"),
plotOutput("plot", width = "800px", height = "500px")
))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(mapdata2020,aes(x=long, y=lat,group=group))+
geom_polygon(aes_string(fill=input$x), color= "black")+
scale_fill_gradient(name= "Range of Factor", low = "yellow", high = "dark blue", na.value = "grey50")+
labs(x= "Longitude", y= "Latitude", title = "Global Happiness by Factors in 2020")+
theme_tufte()
})
}
shinyApp(ui, server)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
#install.packages("maps", repos = "http://cran.us.r-project.org")
#install.packages("leaflet", repos = "http://cran.us.r-project.org")
#install.packages("rgdal", repos = "http://cran.us.r-project.org")
#install.packages("raster")
#install.packages("tmap", repos = "http://cran.us.r-project.org")
#install.packages("mapproj", repos = "http://cran.us.r-project.org")
#install.packages("countrycode")
# Chunk 3
library(tidyverse)
library(naniar)
library(janitor)
library(here)
library(shiny)
library(shinydashboard)
library(ggplot2)
library(maps)
library(leaflet)
library(magrittr)
library(rvest)
library(rgdal)
library(rworldmap)
#library(tmap)
library(sf)
library(mapproj)
library(ggthemes)
# Chunk 4
getwd()
# Chunk 5
happy_2020 <- read_csv("../happiness_data/2020.csv") %>% clean_names()
happy_2021 <- read_csv("../happiness_data/2021.csv") %>% clean_names()
# Chunk 6
names(happy_2020)
# Chunk 7
happy_2020$year <- "2020"
happy_2021$year <- "2021"
# Chunk 8
happy_2020<-happy_2020 %>%
rename(region = "country_name")
# Chunk 9
happy_2021<-happy_2021 %>%
rename(region = "country_name")
# Chunk 10
names(happy_2020)
# Chunk 11
names(happy_2021)
# Chunk 12
mapdata<-map_data("world")
# Chunk 13
mapdata2020 <-map_data("world")
# Chunk 14
mapdata2020<-left_join(mapdata2020,happy_2020, by="region")
# Chunk 15
mapdata2021<-map_data("world")
# Chunk 16
mapdata2021 <-left_join(mapdata2021, happy_2021, by="region")
# Chunk 17
glimpse(mapdata2020)
# Chunk 18
merged_happy <-read.csv("../happiness_data/merged_happy.csv")
# Chunk 19
merged_happy<-merged_happy %>%
rename(region= "country_name")
# Chunk 20
mapdatahappy <-map_data("world")
glimpse(mapdatahappy)
# Chunk 21
mapdatahappy <-left_join(mapdatahappy, merged_happy, by= "region")
# Chunk 22
summary(mapdata2020$ladder_score)
# Chunk 23
mapdata2020 <-mapdata2020 %>%
mutate(range_ladder_score= case_when(ladder_score < 2.567 ~ "very small",
ladder_score >= 2.567 & ladder_score <=5.747 ~ "small",
ladder_score >= 5.747 & ladder_score <7.809 ~"medium",
ladder_score >= 7.809 ~ "large"))
# Chunk 24
summary(mapdata2020$social_support)
# Chunk 25
mapdata2020 %>%
relocate(social_support) %>%
filter(!is.na(social_support))
# Chunk 26
map_socialsupport<-mapdata2020 %>%
ggplot(aes(x = long, y= lat, group=group))+
geom_polygon(aes(fill=social_support), color= "black")
map_socialsupport
# Chunk 27
map_socialsupport +scale_fill_gradient(name = "Range of Factor", low = "yellow", high= "dark blue", na.value ="grey50")
# Chunk 28
map_healthy_life_expectancy <-mapdata2020 %>%
ggplot(aes(x=long,y=lat,group=group))+
geom_polygon(aes(fill=healthy_life_expectancy),color="black")
map_healthy_life_expectancy
# Chunk 29
map_healthy_life_expectancy +scale_fill_gradient(name = "Range of Factor", low = "yellow", high= "dark blue", na.value ="grey50")
# Chunk 30
map2_social_support <-
mapdata2021 %>%
ggplot(aes(x=long, y=lat, group=group))+
geom_polygon(aes(fill=social_support), color= "black")
map2_social_support +
scale_fill_gradient(name= "Range of Factor", low= "yellow", high = "dark blue", na.value = "grey50")
# Chunk 31
map2_healthy_life_expectancy <-mapdata2021 %>%
ggplot(aes(x=long, y=lat,group=group))+
geom_polygon(aes(fill=healthy_life_expectancy), color= "black")
map2_healthy_life_expectancy+
scale_fill_gradient(name= "Range of Factor", low = "yellow", high = "dark blue", na.value = "grey50")
# Chunk 32
mapdatahappy %>%
ggplot(aes(x=long, y=lat,group=group))+
geom_polygon(aes(fill=healthy_life_expectancy), color= "black")+
scale_fill_gradient(name = "range of factor", low = "yellow", high= "dark blue", na.value = "grey50")
# Chunk 33
names(mapdata2020)
# Chunk 34
library(shiny)
ui <- dashboardPage(
dashboardHeader(title="2020 World Map"),
dashboardSidebar(disable =T),
dashboardBody(selectInput("x", "Select Factor Variable", choices =c("ladder_score", "social_support", "healthy_life_expectancy", "freedom_to_make_life_choices", "generosity", "perceptions_of_corruption"), selected= "ladder_score"),
plotOutput("plot", width = "800px", height = "500px")
))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(mapdata2020,aes(x=long, y=lat,group=group))+
geom_polygon(aes_string(fill=input$x), color= "black")+
scale_fill_gradient(name= "Range of Factor", low = "yellow", high = "dark blue", na.value = "grey50")+
labs(x= "Longitude", y= "Latitude", title = "Global Happiness by Factors in 2020")+
theme_tufte()
})
}
shinyApp(ui, server)
View(map2_healthy_life_expectancy)
names(happy_2020)
happy_2021<-happy_2021 %>%
rename(region = "country_name")
happy_2020<-happy_2020 %>%
rename(region = "country_name")
names(happy_2021)
happy_2020 <- read_csv("../happiness_data/2020.csv") %>% clean_names()
happy_2021 <- read_csv("../happiness_data/2021.csv") %>% clean_names()
setwd("C:/Users/merma/OneDrive/Desktop/happy")
happy_2020 <- read_csv("../happiness_data/2020.csv") %>% clean_names()
happy_2021 <- read_csv("../happiness_data/2021.csv") %>% clean_names()
