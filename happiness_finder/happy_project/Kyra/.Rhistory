happy_2021<-happy_2021 %>%
rename(region = "country_name")
names(happy_2021)
mapdata2021 <-left_join(mapdata2021, happy_2021, by="region")
View(mapdata2021)
mapdata<-map_data("world")
view(mapdata)
mapdata2020 <-mapdata %>% filter(!is.na(mapdata2020$subregion))
mapdata2020 <-mapdata2020 %>% filter(!is.na(mapdata2020$subregion))
mapdata<-map_data("world")
view(mapdata)
mapdata2020 <-mapdata2020 %>% filter(!is.na(mapdata2020$subregion))
View(mapdata2020)
mapdata2020 <-map_data("world")
mapdata2020<-left_join(mapdata2020,happy_2020, by="region")
mapdata<-map_data("world")
view(mapdata)
mapdata2020 <-map_data("world")
mapdata2020<-left_join(mapdata2020,happy_2020, by="region")
mapdata2021<-map_data("world")
view(mapdata2021)
mapdata2021 <-left_join(mapdata2021, happy_2021, by="region")
View(mapdata2021)
View(mapdata2020)
map1<-ggplot(mapdata2020, aex(x = long, y= lat, group= group))+
geom_polygon(aes(fill="social_support"), color= "black")
map1<-ggplot(mapdata2020, aes(x = long, y= lat, group= group))+
geom_polygon(aes(fill="social_support"), color= "black")
map1<-ggplot(mapdata2020, aes(x = long, y= lat, group= group))+
geom_polygon(aes(fill="social_support"), color= "black")
map1
map1<-ggplot(mapdata2020, aes(x = long, y= lat, fill="social_support"))+
geom_polygon(color= "black")
map1
map1<-ggplot(mapdata2020, aes(x = long, y= lat, group= group))+
geom_polygon(aes(fill="social_support"), color= "black")
map1
map_socialsupport<-ggplot(mapdata2020, aes(x = long, y= lat, group= group))+
geom_polygon(aes(fill="social_support"), color= "black")
map_socialsupport
map_ladderscore<-ggplot(mapdata2020, aes(x=long, lat, group=group))+
geom_polygon(aes(fill="ladder_score"), color="black")
map_ladderscore<-ggplot(mapdata2020, aes(x=long, lat, group=group))+
geom_polygon(aes(fill="ladder_score"), color="black")
map_ladderscore
map_socialsupportadj <- map_socialsupport +scale_fill_gradient(name= "Range of Social Support", low = "yellow", high = "red", na.value = "grey50")
map_socialsupportadj <- map_socialsupport +scale_fill_gradient(name= "Range of Social Support", low = "yellow", high = "red", na.value = "grey50")
map_socialsupportadj
map_socialsupportadj <- map_socialsupport +scale_fill_gradient(name= "Range of Social Support", low = "yellow", high = "red", na.value = "grey50")
map_socialsupportadj
map_socialsupportadj <- map_socialsupport +scale_fill_brewer()
map_socialsupportadj
map_socialsupportadj <- map_socialsupport +scale_fill_gradient2()
map_socialsupportadj
map_socialsupportadj <- map_socialsupport +scale_fill_fermenter()
map_socialsupportadj
map_socialsupportadj <- map_socialsupport +scale_fill_distiller()
map_socialsupportadj
map_socialsupportadj <- map_socialsupport +scale_fill_continuous()
map_socialsupportadj
map_socialsupportadj <- map_socialsupport +scale_fill_continuous(limits= c(0,10))
map_socialsupportadj
map_socialsupportadj <- map_socialsupport +scale_fill_gradient2(low = "grey", mid= "white", high= "brown", midpoint = 0.02)
map_socialsupportadj
glimpse(mapdata2020)
map_ladderscore<-ggplot(mapdata2020, aes(x=long, lat, group=group))+
geom_polygon(aes(fill="ladder_score"), color="black")
map_ladderscore
map_ladderscore<-ggplot(mapdata2020, aes(x=long, lat, group=group))+
geom_polygon(aes(fill="ladder_score"), color="black")
mapdata2020 %>%
select(long,lat,region,social_support)
mapdata2020 %>%
select(long,lat,region,social_support) %>%
summarize(social_support)
fivenumsum?
??fivenumsum
mapdata2020 %>%
select(long,lat,region,social_support) %>%
summarize(min_social_support= min(social_support),
mean_social_support=mean(social_support),
max_social_support=max(social_support))
mapdata2020 %>%
select(long,lat,region,social_support) %>%
summarize(min_social_support= min(social_support,na.rm =T),
mean_social_support=mean(social_support, na.rm =T),
max_social_support=max(social_support,na.rm =T))
summary(mapdata2020$ladder_score)
mapdata2020 <-mapdata2020 %>%
mutate(range_ladder_score= case_when(ladder_score < 2.567 ~ "very small",
ladder_score >= 2.567 & ladder_score <=5.747 ~ "small",
ladder_score >= 5.747 & ladder_score <7.809 ~"medium",
ladder_score >= 7.809 ~ "large"))
map_ladderscore<-ggplot(mapdata2020, aes(x=long, lat, group=group))+
geom_polygon(aes(fill="range_ladder_score"), color="black")
map_ladderscore
map_ladderscore<-ggplot(mapdata2020, aes(x=long, lat, group=group))+
geom_polygon(aes(fill="ladder_score"), color="black")
map_ladderscore
summary(mapdata2020$social_support)
knitr::opts_chunk$set(echo = TRUE)
colors_red <- colorNumeric(palette= "Reds", domain= NULL)
library(tidyverse)
library(naniar)
library(janitor)
library(here)
library(shiny)
library(shinydashboard)
library(ggplot2)
library(maps)
library(leaflet)
library(magrittr)
library(rvest)
library(rgdal)
library(rworldmap)
library(tmap)
library(sf)
colors_red <- colorNumeric(palette= "Reds", domain= NULL)
leaflet(mapdata2020)|>
addProviderTiles("CartoDB.Voyager")|>
addPolygons(
fillColor = ~colors_red(social_support),
fillOpacity=0.75,
weight= 2,
color= "black"
)|>
leaflet(mapdata2020)|>
addProviderTiles("CartoDB.Voyager")|>
addPolygons(
fillColor = ~colors_red(social_support),
fillOpacity=0.75,
weight= 2,
color= "black"
)|>
addLegend(
pal= colors_red,
values = ~social_support,
title= "social_support in countries"
)|>
leaflet(mapdata2020) %>%
addProviderTiles("CartoDB.Voyager") %>%
addPolygons(
fillColor = ~colors_red(social_support),
fillOpacity=0.75,
weight= 2,
color= "black"
%>%
addLegend(
pal= colors_red,
values = ~social_support,
title= "social_support in countries"
leaflet(mapdata2020) %>%
addProviderTiles("CartoDB.Voyager")|>
addPolygons(
fillColor = ~colors_red(social_support),
fillOpacity=0.75,
weight= 2,
color= "black"
)|>
addLegend(
pal= colors_red,
values = ~social_support,
title= "social_support in countries"
)|>
leaflet(mapdata2020)|>
addProviderTiles("CartoDB.Voyager")|>
addPolygons(
fillColor = ~colors_red(social_support),
fillOpacity=0.75,
weight= 2,
color= "black"
)|>
addLegend(
pal= colors_red,
values = ~social_support,
title= "social_support in countries"
)|>
leaflet(mapdata2020)|>
addProviderTiles("CartoDB.Voyager")|>
addPolygons(
fillColor = ~colors_red(social_support),
fillOpacity=0.75,
weight= 2,
color= "black"
) |>
addLegend(
pal= colors_red,
values = ~social_support,
title= "social_support in countries"
) |>
leaflet(mapdata2020)|>
addProviderTiles("CartoDB.Voyager")|>
addPolygons(
fillColor = ~colors_red(social_support),
fillOpacity=0.75,
weight= 2,
color= "black"
) |>
addLegend(
pal= colors_red,
values = ~social_support,
title= "social_support in countries"
)
map2<- leaflet() %>%
addProviderTiles("CartoDB.Voyager") %>%
addPolygons(data= mapdata2020,
fillColor = ~colors_red(social_support),
fillOpacity=0.75,
weight= 2,
color= "black")
#map2<- leaflet() %>%
addProviderTiles("CartoDB.Voyager") %>%
addPolygons(data= mapdata2020,
fillColor = ~colors_red(social_support),
fillOpacity=0.75,
weight= 2,
color= "black")
library(tidyverse)
hotspring_microbiome <- read_csv("sourmash/hotspring_microbiome.csv")
names(hotspring_microbiome)
hotspring_microbiome <- hotspring_microbiome %>%
relocate(query_name, name, average_abund, average_containment_ani) %>%
arrange(desc(average_abund))
hotspring_microbiome <- hotspring_microbiome %>%
relocate(query_name, name, average_abund, average_containment_ani) %>%
arrange(desc(average_abund))
hotspring_microbiome
View(hotspring_microbiome)
slice_max(hotspring_microbiome)
hotspring_microbiome %>%
arrange(desc(average_abund)
hotspring_microbiome %>%
arrange(desc(average_abund))
theme_set(theme_minimal())
p<- hotspring_microbiome %>%
relocate(query_name, name, average_abund, average_containment_ani) %>%
arrange(desc(average_abund))
p %>%
ggplot(aes(x = name, y = average_abund, fill = name))+
geom_col()+
theme(legend.position = "none")+
coord_flip()+
labs(title = "Abundance of Microbes in Lemonade Creek Hot Spring",
x = NULL,
y = "Average Abundance")
setwd("~/Documents/GitHub/BIS15W2023_kkong/lab-14_binder-main")
knitr::opts_chunk$set(echo = TRUE)
#install.packages("maps")
#install.packages("leaflet")
#install.packages("rgdal")
#install.packages("tmap")
library(tidyverse)
library(naniar)
library(janitor)
library(here)
library(shiny)
library(shinydashboard)
library(ggplot2)
library(maps)
library(leaflet)
library(magrittr)
library(rvest)
library(rgdal)
library(rworldmap)
library(tmap)
#install.packages("maps")
#install.packages("leaflet")
#install.packages("rgdal")
install.packages("tmap")
library(tidyverse)
library(naniar)
library(janitor)
library(here)
library(shiny)
library(shinydashboard)
library(ggplot2)
library(maps)
library(leaflet)
library(magrittr)
library(rvest)
library(rgdal)
library(rworldmap)
library(tmap)
#install.packages("maps")
#install.packages("leaflet")
#install.packages("rgdal")
install.packages("tmap")
library(tidyverse)
library(naniar)
library(janitor)
library(here)
library(shiny)
library(shinydashboard)
library(ggplot2)
library(maps)
library(leaflet)
library(magrittr)
library(rvest)
library(rgdal)
library(rworldmap)
library(tmap)
#install.packages("maps")
#install.packages("leaflet")
#install.packages("rgdal")
#install.packages("tmap")
install.packages("raster")
knitr::opts_chunk$set(echo = TRUE)
#install.packages("maps")
#install.packages("leaflet")
#install.packages("rgdal")
#install.packages("tmap")
install.packages("raster")
library(tidyverse)
library(naniar)
library(janitor)
library(here)
library(shiny)
library(shinydashboard)
library(ggplot2)
library(maps)
library(leaflet)
library(magrittr)
library(rvest)
library(rgdal)
library(rworldmap)
library(tmap)
#install.packages("maps")
#install.packages("leaflet")
#install.packages("rgdal")
#install.packages("tmap")
install.packages("raster")
library(tidyverse)
library(naniar)
library(janitor)
library(here)
library(shiny)
library(shinydashboard)
library(ggplot2)
library(maps)
library(leaflet)
library(magrittr)
library(rvest)
library(rgdal)
library(rworldmap)
library(tmap)
happy_2020 <- read_csv("/Users/merma/OneDrive/Desktop/happy/happiness_finder/happy_project/happiness_data/2020.csv") %>% clean_names()
getwd()
happy_2020 <- read_csv("/Users/kyrkon38/Documents/GitHub/happy/happiness_finder/happy_project/happiness_data/2020.csv") %>% clean_names()
happy_2021 <- read_csv("/Users/kyrkon38/Documents/GitHub/happy/happiness_finder/happy_project/happiness_data/2021.csv") %>% clean_names()
names(happy_2020)
happy_2020$year <- "2020"
happy_2021$year <- "2021"
happy_2020<-happy_2020 %>%
rename(region = "country_name")
happy_2021<-happy_2021 %>%
rename(region = "country_name")
names(happy_2020)
names(happy_2021)
mapdata<-map_data("world")
view(mapdata)
mapdata2020 <-map_data("world")
mapdata2020<-left_join(mapdata2020,happy_2020, by="region")
mapdata2021<-map_data("world")
view(mapdata2021)
mapdata2021 <-left_join(mapdata2021, happy_2021, by="region")
View(mapdata2021)
glimpse(mapdata2020)
glimpse(mapdata2021)
data("World")
map_socialsupport<-ggplot(mapdata2020, aes(x = long, y= lat, group= group,))+
geom_polygon(aes(fill="social_support"), color= "black")
map_socialsupport
map_socialsupport<-ggplot(mapdata2020, aes(x = long, y= lat, group= group, fill = "social_support"))+
geom_polygon(aes(fill="social_support"), color= "black")
map_socialsupport
View(mapdata2020)
mapdata2020<-left_join(mapdata2020,happy_2020, by="region") %>%
group_by(region)
map_socialsupport<-ggplot(mapdata2020, aes(x = long, y= lat, group= group, fill = "social_support"))+
geom_polygon(aes(fill="social_support"), color= "black")
map_socialsupport
View(mapdata2020)
map_socialsupport<-ggplot(mapdata2020, aes(x = long, y= lat, fill = "social_support"))+
geom_polygon(aes(fill="social_support"), color= "black")
map_socialsupport
map_socialsupport<-ggplot(mapdata2020, aes(x = long, y= lat, group = group, fill = "social_support"))+
geom_polygon(aes(fill="social_support"), color= "black")
map_socialsupport
map_ladderscore<-ggplot(mapdata2020, aes(x=long, lat, group=group))+
geom_polygon(aes(fill="ladder_score"), color="black")
map_ladderscore
knitr::opts_chunk$set(echo = TRUE)
#install.packages("maps", repos = "http://cran.us.r-project.org")
#install.packages("leaflet", repos = "http://cran.us.r-project.org")
#install.packages("rgdal", repos = "http://cran.us.r-project.org")
#install.packages("raster")
#install.packages("tmap", repos = "http://cran.us.r-project.org")
#install.packages("mapproj", repos = "http://cran.us.r-project.org")
#install.packages("countrycode")
library(tidyverse)
library(naniar)
library(janitor)
library(here)
library(shiny)
library(shinydashboard)
library(ggplot2)
library(maps)
library(leaflet)
library(magrittr)
library(rvest)
library(rgdal)
library(rworldmap)
#library(tmap)
library(sf)
library(mapproj)
library(ggthemes)
getwd()
happy_2020 <- read_csv("../happiness_data/2020.csv") %>% clean_names()
happy_2021 <- read_csv("../happiness_data/2021.csv") %>% clean_names()
names(happy_2020)
happy_2020$year <- "2020"
happy_2021$year <- "2021"
happy_2020<-happy_2020 %>%
rename(region = "country_name")
happy_2021<-happy_2021 %>%
rename(region = "country_name")
names(happy_2020)
names(happy_2021)
mapdata<-map_data("world")
mapdata2020 <-map_data("world")
mapdata2020<-left_join(mapdata2020,happy_2020, by="region")
mapdata2021<-map_data("world")
mapdata2021 <-left_join(mapdata2021, happy_2021, by="region")
glimpse(mapdata2020)
merged_happy <-read.csv("../happiness_data/merged_happy.csv")
merged_happy<-merged_happy %>%
rename(region= "country_name")
mapdatahappy <-map_data("world")
glimpse(mapdatahappy)
mapdatahappy <-left_join(mapdatahappy, merged_happy, by= "region")
summary(mapdata2020$ladder_score)
mapdata2020 <-mapdata2020 %>%
mutate(range_ladder_score= case_when(ladder_score < 2.567 ~ "very small",
ladder_score >= 2.567 & ladder_score <=5.747 ~ "small",
ladder_score >= 5.747 & ladder_score <7.809 ~"medium",
ladder_score >= 7.809 ~ "large"))
summary(mapdata2020$social_support)
mapdata2020 %>%
relocate(social_support) %>%
filter(!is.na(social_support))
map_socialsupport<-mapdata2020 %>%
ggplot(aes(x = long, y= lat, group=group))+
geom_polygon(aes(fill=social_support), color= "black")
map_socialsupport
map_socialsupport +scale_fill_gradient(name = "Range of Factor", low = "yellow", high= "dark blue", na.value ="grey50")
map_healthy_life_expectancy <-mapdata2020 %>%
ggplot(aes(x=long,y=lat,group=group))+
geom_polygon(aes(fill=healthy_life_expectancy),color="black")
map_healthy_life_expectancy
map_healthy_life_expectancy +scale_fill_gradient(name = "Range of Factor", low = "yellow", high= "dark blue", na.value ="grey50")
map2_social_support <-
mapdata2021 %>%
ggplot(aes(x=long, y=lat, group=group))+
geom_polygon(aes(fill=social_support), color= "black")
map2_social_support +
scale_fill_gradient(name= "Range of Factor", low= "yellow", high = "dark blue", na.value = "grey50")
map2_healthy_life_expectancy <-mapdata2021 %>%
ggplot(aes(x=long, y=lat,group=group))+
geom_polygon(aes(fill=healthy_life_expectancy), color= "black")
map2_healthy_life_expectancy+
scale_fill_gradient(name= "Range of Factor", low = "yellow", high = "dark blue", na.value = "grey50")
mapdatahappy %>%
ggplot(aes(x=long, y=lat,group=group))+
geom_polygon(aes(fill=healthy_life_expectancy), color= "black")+
scale_fill_gradient(name = "range of factor", low = "yellow", high= "dark blue", na.value = "grey50")
names(mapdata2020)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title="2020 World Map"),
dashboardSidebar(disable =T),
dashboardBody(selectInput("x", "Select Factor Variable", choices =c("ladder_score", "social_support", "healthy_life_expectancy", "freedom_to_make_life_choices", "generosity", "perceptions_of_corruption"), selected= "ladder_score"),
plotOutput("plot", width = "800px", height = "500px")
))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(mapdata2020,aes(x=long, y=lat,group=group))+
geom_polygon(aes_string(fill=input$x), color= "black")+
scale_fill_gradient(name= "Range of Factor", low = "yellow", high = "dark blue", na.value = "grey50")+
labs(x= "Longitude", y= "Latitude", title = "Global Happiness by Factors in 2020")+
theme_tufte()
})
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title="2021 World Map"),
dashboardSidebar(disable =T),
dashboardBody(selectInput("x", "Select Factor Variable", choices =c("ladder_score", "social_support", "healthy_life_expectancy", "freedom_to_make_life_choices", "generosity", "perceptions_of_corruption"), selected= "ladder_score"),
plotOutput("plot", width = "800px", height = "500px")
))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(mapdata2021,aes(x=long, y=lat,group=group))+
geom_polygon(aes_string(fill=input$x), color= "black")+
scale_fill_gradient(name= "Range of Factor", low = "yellow", high = "dark blue", na.value = "grey50")+
labs(x= "Longitude", y= "Latitude", title = "Global Happiness by Factors in 2021")+
theme_tufte()
})
}
shinyApp(ui, server)
