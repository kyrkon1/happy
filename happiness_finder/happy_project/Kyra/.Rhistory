clean_names()
reorder
reorder %>%
group_by(country_name) %>%
ggplot(aes(x=reorder(country_name,ladder_score),country_name,y=ladder_score, fill=factors))+
geom_col(alpha=0.55)+
coord_flip()+
labs(title = "The Dependency of Happiness on 7 Factors in 2020", x= "Countries", y="Factors")+
theme(axis.text.y =element_text(size=3.5))
t1_narrow<-
narrow%>%
filter(year=="2021")
t1_narrow
revamp <- t1_narrow %>%
group_by(country_name) %>%
pivot_longer (-c(country_name,year,ladder_score),
names_to= "Factors",
values_to="Score") %>%
clean_names()
revamp
g2<-revamp %>%
group_by(country_name) %>%
ggplot(aes(x=reorder(country_name,ladder_score),country_name,y=ladder_score, fill=factors))+
geom_col(alpha=0.55)+
coord_flip()+
labs(title = "The Dependency of Happiness on 7 Factors in 2021", x= "Countries", y="Factors")+
theme(axis.text.y =element_text(size=3.5))
g2
revamp5 <- t1_narrow %>%
top_n(5,ladder_score) %>%
group_by(country_name) %>%
pivot_longer (-c(country_name,year,ladder_score),
names_to= "Factors",
values_to="Score")
revamp5 %>%
ggplot(aes(x=reorder(country_name,ladder_score),country_name,y=ladder_score, fill=Factors))+
geom_col(alpha=0.59)+
coord_flip()+
labs(title = "The Dependency of Happiness on 7 Factors in 2021", x= "Countries", y="Factors")+
theme(axis.text.y =element_text(size=3.5))
revamp5
revampbottom5 <- t1_narrow %>%
top_n(-5,ladder_score) %>%
group_by(country_name) %>%
pivot_longer (-c(country_name,year,ladder_score),
names_to= "Factors",
values_to="Score")
revampbottom5 %>%
ggplot(aes(x=reorder(country_name,ladder_score),country_name,y=ladder_score, fill=Factors))+
geom_col(alpha=0.59)+
coord_flip()+
labs(title = "The Dependency of Happiness on 7 Factors in 2021", x= "Countries", y="Factors")+
theme(axis.text.y =element_text(size=3.5))
revampbottom5
reordermax5 <-tw_narrow %>%
top_n(5,ladder_score) %>%
group_by(country_name) %>%
pivot_longer(-c(country_name, year,ladder_score),
names_to = "Factors",
values_to= "Score")
reordermax5 <-tw_narrow %>%
top_n(5,ladder_score) %>%
group_by(country_name) %>%
pivot_longer(-c(country_name, year,ladder_score),
names_to = "Factors",
values_to= "Score")
reordermax5 %>%
ggplot(aes(x= reorder(country_name,ladder_score), country_name, y= ladder_score, fill= Factors))+
geom_col(alpha =0.55)+
coord_flip()
reordermin <-tw_narrow %>%
top_n(-5,ladder_score) %>%
group_by(country_name) %>%
pivot_longer(-c(country_name, year,ladder_score),
names_to = "Factors",
values_to= "Score")
reordermin %>%
ggplot(aes(x= reorder(country_name,ladder_score), country_name, y= ladder_score, fill= Factors))+
geom_col(alpha =0.55)+
coord_flip()
reordermax5 %>%
ggplot(aes(x= reorder(country_name,ladder_score), country_name, y= ladder_score, fill= Factors))+
geom_col(alpha =0.55)+
coord_flip()+
labs(title = "Happiness Score In 2020", x= "Countries", y= "Factors")
reordermin %>%
ggplot(aes(x= reorder(country_name,ladder_score), country_name, y= ladder_score, fill= Factors))+
geom_col(alpha =0.55)+
coord_flip()+
labs(title= "Happiness Scores in 2020", x= "Countries", y= "Factors")
revampbottom5 %>%
ggplot(aes(x=reorder(country_name,ladder_score),country_name,y=ladder_score, fill=Factors))+
geom_col(alpha=0.59)+
coord_flip()+
labs(title = "The Dependency of Happiness on 7 Factors in 2021", x= "Countries", y="Factors")+
revampbottom5
revampbottom5 %>%
ggplot(aes(x=reorder(country_name,ladder_score),country_name,y=ladder_score, fill=Factors))+
geom_col(alpha=0.59)+
coord_flip()+
labs(title = "The Dependency of Happiness on 7 Factors in 2021", x= "Countries", y="Factors")
revampbottom5
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(naniar)
library(janitor)
library(here)
library(shiny)
library(shinydashboard)
library(ggplot2)
library(maps)
library(leaflet)
library(magrittr)
library(rvest)
library(rgdal)
library(rworldmap)
#install.packages("maps")
#install.packages("leaflet")
#install.packages("rgdal")
install.packages("tmap")
library(tidyverse)
library(naniar)
library(janitor)
library(here)
library(shiny)
library(shinydashboard)
library(ggplot2)
library(maps)
library(leaflet)
library(magrittr)
library(rvest)
library(rgdal)
library(rworldmap)
library(tmap)
happy_2020 <- read_csv("/Users/merma/OneDrive/Desktop/happy/happiness_finder/happy_project/happiness_data/2020.csv") %>% clean_names()
happy_2021 <- read_csv("/Users/merma/OneDrive/Desktop/happy/happiness_finder/happy_project/happiness_data/2021.csv") %>% clean_names()
url <- "https://www.nationsonline.org/oneworld/country_code_list.htm#:~:text=The%20ISO%20country%20codes%20are,a%20country%20or%20a%20state."
iso_codes <- url %>%
read_html() %>%
html_nodes(xpath= '//[*id= "CountryCode"]') %>%
html_table()
url <- "https://www.nationsonline.org/oneworld/country_code_list.htm#:~:text=The%20ISO%20country%20codes%20are,a%20country%20or%20a%20state."
iso_codes <- url %>%
read_html() %>%
html_nodes(xpath= '//[*id= "Country-Code-A-C"]') %>%
html_table()
url <- "https://www.nationsonline.org/oneworld/country_code_list.htm#:~:text=The%20ISO%20country%20codes%20are,a%20country%20or%20a%20state."
iso_codes <- url %>%
read_html() %>%
html_nodes(xpath= '//*[@id= "Country-Code-A-C*]') %>%
html_table()
knitr::opts_chunk$set(echo = TRUE)
#install.packages("maps")
#install.packages("leaflet")
#install.packages("rgdal")
#install.packages("tmap")
library(tidyverse)
library(naniar)
library(janitor)
library(here)
library(shiny)
library(shinydashboard)
library(ggplot2)
library(maps)
library(leaflet)
library(magrittr)
library(rvest)
library(rgdal)
library(rworldmap)
library(tmap)
getwd()
happy_2020 <- read_csv("/Users/merma/OneDrive/Desktop/happy/happiness_finder/happy_project/happiness_data/2020.csv") %>% clean_names()
happy_2021 <- read_csv("/Users/merma/OneDrive/Desktop/happy/happiness_finder/happy_project/happiness_data/2021.csv") %>% clean_names()
names(happy_2020)
mapdata<-map_data("world")
view(mapdata)
View(mapdata)
mapdata2020<-left_join(mapdata,happy_2020, by= "country_name")
happy_2020$year <- "2020"
happy_2021$year <- "2021"
names(happy_2020)
mapdata2020<-left_join(mapdata,happy_2020, by= "country_name")
mapdata2020<-map_data("world")
view(mapdata)
mapdata2020<-left_join(mapdata,happy_2020, by= "country_name")
mapdata2020<-left_join(mapdata,happy_2020, by="country_name")
mapdata2020<-left_join(mapdata,happy_2020, by="region")
mapdata2020<-left_join(mapdata2020,happy_2020, by="region")
View(happy_2021)
happy_2020 %>%
rename(region = "country_name")
happy_2020<-happy_2020 %>%
rename(region = "country_name")
happy_2010<-happy_2021 %>%
rename(region = "country_name")
names(happy_2020)
names(happy_2021)
mapdata2020<-map_data("world")
view(mapdata)
mapdata2020<-left_join(mapdata2020,happy_2020, by="region")
mapdata2020<-left_join(mapdata2020,happy_2020, by="region")
View(mapdata2020)
mapdata2021<-map_data("world")
view(mapdata)
mapdata2021 <-left_join(mapdata2021, happy_2021, by="region")
names(happy_2021)
happy_2021<-happy_2021 %>%
rename(region = "country_name")
names(happy_2021)
mapdata2021 <-left_join(mapdata2021, happy_2021, by="region")
View(mapdata2021)
mapdata<-map_data("world")
view(mapdata)
mapdata2020 <-mapdata %>% filter(!is.na(mapdata2020$subregion))
mapdata2020 <-mapdata2020 %>% filter(!is.na(mapdata2020$subregion))
mapdata<-map_data("world")
view(mapdata)
mapdata2020 <-mapdata2020 %>% filter(!is.na(mapdata2020$subregion))
View(mapdata2020)
mapdata2020 <-map_data("world")
mapdata2020<-left_join(mapdata2020,happy_2020, by="region")
mapdata<-map_data("world")
view(mapdata)
mapdata2020 <-map_data("world")
mapdata2020<-left_join(mapdata2020,happy_2020, by="region")
mapdata2021<-map_data("world")
view(mapdata2021)
mapdata2021 <-left_join(mapdata2021, happy_2021, by="region")
View(mapdata2021)
View(mapdata2020)
map1<-ggplot(mapdata2020, aex(x = long, y= lat, group= group))+
geom_polygon(aes(fill="social_support"), color= "black")
map1<-ggplot(mapdata2020, aes(x = long, y= lat, group= group))+
geom_polygon(aes(fill="social_support"), color= "black")
map1<-ggplot(mapdata2020, aes(x = long, y= lat, group= group))+
geom_polygon(aes(fill="social_support"), color= "black")
map1
map1<-ggplot(mapdata2020, aes(x = long, y= lat, fill="social_support"))+
geom_polygon(color= "black")
map1
map1<-ggplot(mapdata2020, aes(x = long, y= lat, group= group))+
geom_polygon(aes(fill="social_support"), color= "black")
map1
map_socialsupport<-ggplot(mapdata2020, aes(x = long, y= lat, group= group))+
geom_polygon(aes(fill="social_support"), color= "black")
map_socialsupport
map_ladderscore<-ggplot(mapdata2020, aes(x=long, lat, group=group))+
geom_polygon(aes(fill="ladder_score"), color="black")
map_ladderscore<-ggplot(mapdata2020, aes(x=long, lat, group=group))+
geom_polygon(aes(fill="ladder_score"), color="black")
map_ladderscore
map_socialsupportadj <- map_socialsupport +scale_fill_gradient(name= "Range of Social Support", low = "yellow", high = "red", na.value = "grey50")
map_socialsupportadj <- map_socialsupport +scale_fill_gradient(name= "Range of Social Support", low = "yellow", high = "red", na.value = "grey50")
map_socialsupportadj
map_socialsupportadj <- map_socialsupport +scale_fill_gradient(name= "Range of Social Support", low = "yellow", high = "red", na.value = "grey50")
map_socialsupportadj
map_socialsupportadj <- map_socialsupport +scale_fill_brewer()
map_socialsupportadj
map_socialsupportadj <- map_socialsupport +scale_fill_gradient2()
map_socialsupportadj
map_socialsupportadj <- map_socialsupport +scale_fill_fermenter()
map_socialsupportadj
map_socialsupportadj <- map_socialsupport +scale_fill_distiller()
map_socialsupportadj
map_socialsupportadj <- map_socialsupport +scale_fill_continuous()
map_socialsupportadj
map_socialsupportadj <- map_socialsupport +scale_fill_continuous(limits= c(0,10))
map_socialsupportadj
map_socialsupportadj <- map_socialsupport +scale_fill_gradient2(low = "grey", mid= "white", high= "brown", midpoint = 0.02)
map_socialsupportadj
glimpse(mapdata2020)
map_ladderscore<-ggplot(mapdata2020, aes(x=long, lat, group=group))+
geom_polygon(aes(fill="ladder_score"), color="black")
map_ladderscore
map_ladderscore<-ggplot(mapdata2020, aes(x=long, lat, group=group))+
geom_polygon(aes(fill="ladder_score"), color="black")
mapdata2020 %>%
select(long,lat,region,social_support)
mapdata2020 %>%
select(long,lat,region,social_support) %>%
summarize(social_support)
fivenumsum?
??fivenumsum
mapdata2020 %>%
select(long,lat,region,social_support) %>%
summarize(min_social_support= min(social_support),
mean_social_support=mean(social_support),
max_social_support=max(social_support))
mapdata2020 %>%
select(long,lat,region,social_support) %>%
summarize(min_social_support= min(social_support,na.rm =T),
mean_social_support=mean(social_support, na.rm =T),
max_social_support=max(social_support,na.rm =T))
summary(mapdata2020$ladder_score)
mapdata2020 <-mapdata2020 %>%
mutate(range_ladder_score= case_when(ladder_score < 2.567 ~ "very small",
ladder_score >= 2.567 & ladder_score <=5.747 ~ "small",
ladder_score >= 5.747 & ladder_score <7.809 ~"medium",
ladder_score >= 7.809 ~ "large"))
map_ladderscore<-ggplot(mapdata2020, aes(x=long, lat, group=group))+
geom_polygon(aes(fill="range_ladder_score"), color="black")
map_ladderscore
map_ladderscore<-ggplot(mapdata2020, aes(x=long, lat, group=group))+
geom_polygon(aes(fill="ladder_score"), color="black")
map_ladderscore
summary(mapdata2020$social_support)
knitr::opts_chunk$set(echo = TRUE)
colors_red <- colorNumeric(palette= "Reds", domain= NULL)
library(tidyverse)
library(naniar)
library(janitor)
library(here)
library(shiny)
library(shinydashboard)
library(ggplot2)
library(maps)
library(leaflet)
library(magrittr)
library(rvest)
library(rgdal)
library(rworldmap)
library(tmap)
library(sf)
colors_red <- colorNumeric(palette= "Reds", domain= NULL)
leaflet(mapdata2020)|>
addProviderTiles("CartoDB.Voyager")|>
addPolygons(
fillColor = ~colors_red(social_support),
fillOpacity=0.75,
weight= 2,
color= "black"
)|>
leaflet(mapdata2020)|>
addProviderTiles("CartoDB.Voyager")|>
addPolygons(
fillColor = ~colors_red(social_support),
fillOpacity=0.75,
weight= 2,
color= "black"
)|>
addLegend(
pal= colors_red,
values = ~social_support,
title= "social_support in countries"
)|>
leaflet(mapdata2020) %>%
addProviderTiles("CartoDB.Voyager") %>%
addPolygons(
fillColor = ~colors_red(social_support),
fillOpacity=0.75,
weight= 2,
color= "black"
%>%
addLegend(
pal= colors_red,
values = ~social_support,
title= "social_support in countries"
leaflet(mapdata2020) %>%
addProviderTiles("CartoDB.Voyager")|>
addPolygons(
fillColor = ~colors_red(social_support),
fillOpacity=0.75,
weight= 2,
color= "black"
)|>
addLegend(
pal= colors_red,
values = ~social_support,
title= "social_support in countries"
)|>
leaflet(mapdata2020)|>
addProviderTiles("CartoDB.Voyager")|>
addPolygons(
fillColor = ~colors_red(social_support),
fillOpacity=0.75,
weight= 2,
color= "black"
)|>
addLegend(
pal= colors_red,
values = ~social_support,
title= "social_support in countries"
)|>
leaflet(mapdata2020)|>
addProviderTiles("CartoDB.Voyager")|>
addPolygons(
fillColor = ~colors_red(social_support),
fillOpacity=0.75,
weight= 2,
color= "black"
) |>
addLegend(
pal= colors_red,
values = ~social_support,
title= "social_support in countries"
) |>
leaflet(mapdata2020)|>
addProviderTiles("CartoDB.Voyager")|>
addPolygons(
fillColor = ~colors_red(social_support),
fillOpacity=0.75,
weight= 2,
color= "black"
) |>
addLegend(
pal= colors_red,
values = ~social_support,
title= "social_support in countries"
)
map2<- leaflet() %>%
addProviderTiles("CartoDB.Voyager") %>%
addPolygons(data= mapdata2020,
fillColor = ~colors_red(social_support),
fillOpacity=0.75,
weight= 2,
color= "black")
#map2<- leaflet() %>%
addProviderTiles("CartoDB.Voyager") %>%
addPolygons(data= mapdata2020,
fillColor = ~colors_red(social_support),
fillOpacity=0.75,
weight= 2,
color= "black")
library(tidyverse)
hotspring_microbiome <- read_csv("sourmash/hotspring_microbiome.csv")
names(hotspring_microbiome)
hotspring_microbiome <- hotspring_microbiome %>%
relocate(query_name, name, average_abund, average_containment_ani) %>%
arrange(desc(average_abund))
hotspring_microbiome <- hotspring_microbiome %>%
relocate(query_name, name, average_abund, average_containment_ani) %>%
arrange(desc(average_abund))
hotspring_microbiome
View(hotspring_microbiome)
slice_max(hotspring_microbiome)
hotspring_microbiome %>%
arrange(desc(average_abund)
hotspring_microbiome %>%
arrange(desc(average_abund))
theme_set(theme_minimal())
p<- hotspring_microbiome %>%
relocate(query_name, name, average_abund, average_containment_ani) %>%
arrange(desc(average_abund))
p %>%
ggplot(aes(x = name, y = average_abund, fill = name))+
geom_col()+
theme(legend.position = "none")+
coord_flip()+
labs(title = "Abundance of Microbes in Lemonade Creek Hot Spring",
x = NULL,
y = "Average Abundance")
setwd("~/Documents/GitHub/BIS15W2023_kkong/lab-14_binder-main")
knitr::opts_chunk$set(echo = TRUE)
#install.packages("maps")
#install.packages("leaflet")
#install.packages("rgdal")
#install.packages("tmap")
library(tidyverse)
library(naniar)
library(janitor)
library(here)
library(shiny)
library(shinydashboard)
library(ggplot2)
library(maps)
library(leaflet)
library(magrittr)
library(rvest)
library(rgdal)
library(rworldmap)
library(tmap)
#install.packages("maps")
#install.packages("leaflet")
#install.packages("rgdal")
install.packages("tmap")
library(tidyverse)
library(naniar)
library(janitor)
library(here)
library(shiny)
library(shinydashboard)
library(ggplot2)
library(maps)
library(leaflet)
library(magrittr)
library(rvest)
library(rgdal)
library(rworldmap)
library(tmap)
#install.packages("maps")
#install.packages("leaflet")
#install.packages("rgdal")
install.packages("tmap")
library(tidyverse)
library(naniar)
library(janitor)
library(here)
library(shiny)
library(shinydashboard)
library(ggplot2)
library(maps)
library(leaflet)
library(magrittr)
library(rvest)
library(rgdal)
library(rworldmap)
library(tmap)
#install.packages("maps")
#install.packages("leaflet")
#install.packages("rgdal")
#install.packages("tmap")
install.packages("raster")
